[S]: A new symbol table is pushed on ===========================================
//int
INTtok

[p]: type_specifier -> INTtok
//main
id

[p]: declaration_specifiers -> type_specifier
[p]: identifier -> IDENTIFIERtok
[p]: direct_declarator -> identifier
//(
OPEN_PARENtok

//)
CLOSE_PARENtok

[p]: direct_declarator -> direct_declarator OPEN_PARENtok CLOSE_PARENtok
//{
OPEN_CURLYtok

[p]: declarator -> direct_declarator
[S]: Symbol main is not found at top level
[S]: Symbol main is not found at any parent level
[S]: Symbol main is not found at top level
[S]: Symbol main is not found at any parent level
[S]: Symbol 'main' is inserted at top level
[S]: A new symbol table is pushed on ===========================================
//int
INTtok

[p]: type_specifier -> INTtok
//x
id

[p]: declaration_specifiers -> type_specifier
[p]: identifier -> IDENTIFIERtok
[p]: direct_declarator -> identifier
//=
EQUALtok

[p]: declarator -> direct_declarator
//0
INTEGER_CONSTANTtok

[p]: constant -> INTEGER_CONSTANTtok
[p]: primary_expression -> constant
[p]: postfix_expression -> primary_expression
//;
SEMItok

[p]: unary_expression -> postfix_expression
[p]: cast_expression -> unary_expression
[p]: multiplicative_expression -> cast_expression
[p]: additive_expression -> multiplicative_expression
[p]: shift_expression -> additive_expression
[p]: relational_expression -> shift_expression
[p]: equality_expression -> relational_expression
[p]: and_expression -> equality_expression
[p]: exclusive_or_expression -> and_expression
[p]: inclusive_or_expression -> exclusive_or_expression
[p]: logical_and_expression -> inclusive_or_expression
[p]: logical_or_expression -> logical_and_expression
[p]: conditional_expression -> logical_or_expression
[p]: assignment_expression -> conditional_expression
[p]: initializer -> assignment_expression
[p]: init_declarator -> declarator EQUALtok initializer
[p]: init_declarator_list -> init_declarator
[S]: Symbol x is not found at top level
[S]: Symbol x is not found at any parent level
[S]: Symbol x is not found at top level
[S]: Symbol x is not found at any parent level
[S]: Symbol 'x' is inserted at top level
[p]: declaration -> declaration_specifiers init_declarator_list SEMItok
[p]: declaration_list -> declaration
//x
id

[p]: identifier -> IDENTIFIERtok
//=
EQUALtok

[p]: primary_expression -> identifier
[S]: Symbol x is found at top level
[p]: postfix_expression -> primary_expression
[p]: unary_expression -> postfix_expression
[p]: assignment_operator -> EQUALtok
//x
id

[p]: identifier -> IDENTIFIERtok
[p]: primary_expression -> identifier
[S]: Symbol x is found at top level
[p]: postfix_expression -> primary_expression
//+
UNARY_PLUStok

[p]: unary_expression -> postfix_expression
[p]: cast_expression -> unary_expression
[p]: multiplicative_expression -> cast_expression
[p]: additive_expression -> multiplicative_expression
//1
INTEGER_CONSTANTtok

[p]: constant -> INTEGER_CONSTANTtok
[p]: primary_expression -> constant
[p]: postfix_expression -> primary_expression
//;
SEMItok

[p]: unary_expression -> postfix_expression
[p]: cast_expression -> unary_expression
[p]: multiplicative_expression -> cast_expression
[p]: additive_expression -> additive_expression UNARY_PLUStok multiplicative_expression
[p]: shift_expression -> additive_expression
[p]: relational_expression -> shift_expression
[p]: equality_expression -> relational_expression
[p]: and_expression -> equality_expression
[p]: exclusive_or_expression -> and_expression
[p]: inclusive_or_expression -> exclusive_or_expression
[p]: logical_and_expression -> inclusive_or_expression
[p]: logical_or_expression -> logical_and_expression
[p]: conditional_expression -> logical_or_expression
[p]: assignment_expression -> conditional_expression
[p]: assignment_expression -> unary_expression assignment_operator assignment_expression
[p]: expression -> assignment_expression
[p]: expression_statement -> expression SEMItok
[p]: statement -> expression_statement
[p]: statement_list -> statement
//x
id

[p]: identifier -> IDENTIFIERtok
//++
INC_OPtok

[p]: primary_expression -> identifier
[S]: Symbol x is found at top level
[p]: postfix_expression -> primary_expression
[p]: postfix_expression -> postfix_expression INC_OPtok
//;
SEMItok

[p]: unary_expression -> postfix_expression
[p]: cast_expression -> unary_expression
[p]: multiplicative_expression -> cast_expression
[p]: additive_expression -> multiplicative_expression
[p]: shift_expression -> additive_expression
[p]: relational_expression -> shift_expression
[p]: equality_expression -> relational_expression
[p]: and_expression -> equality_expression
[p]: exclusive_or_expression -> and_expression
[p]: inclusive_or_expression -> exclusive_or_expression
[p]: logical_and_expression -> inclusive_or_expression
[p]: logical_or_expression -> logical_and_expression
[p]: conditional_expression -> logical_or_expression
[p]: assignment_expression -> conditional_expression
[p]: expression -> assignment_expression
[p]: expression_statement -> expression SEMItok
[p]: statement -> expression_statement
[p]: statement_list -> statement_list statement
//x
id

[p]: identifier -> IDENTIFIERtok
//+=
ADD_ASSIGNtok

[p]: primary_expression -> identifier
[S]: Symbol x is found at top level
[p]: postfix_expression -> primary_expression
[p]: unary_expression -> postfix_expression
[p]: assignment_operator -> ADD_ASSIGNtok
//1
INTEGER_CONSTANTtok

[p]: constant -> INTEGER_CONSTANTtok
[p]: primary_expression -> constant
[p]: postfix_expression -> primary_expression
//;
SEMItok

[p]: unary_expression -> postfix_expression
[p]: cast_expression -> unary_expression
[p]: multiplicative_expression -> cast_expression
[p]: additive_expression -> multiplicative_expression
[p]: shift_expression -> additive_expression
[p]: relational_expression -> shift_expression
[p]: equality_expression -> relational_expression
[p]: and_expression -> equality_expression
[p]: exclusive_or_expression -> and_expression
[p]: inclusive_or_expression -> exclusive_or_expression
[p]: logical_and_expression -> inclusive_or_expression
[p]: logical_or_expression -> logical_and_expression
[p]: conditional_expression -> logical_or_expression
[p]: assignment_expression -> conditional_expression
[p]: assignment_expression -> unary_expression assignment_operator assignment_expression
[p]: expression -> assignment_expression
[p]: expression_statement -> expression SEMItok
[p]: statement -> expression_statement
[p]: statement_list -> statement_list statement
//}
CLOSE_CURLYtok

[S]: The top symbol table is popped off ========================================
[p]: compound_statement -> OPEN_CURLYtok declaration_list statement_list CLOSE_CURLYtok
[p]: function_definition -> declaration_specifiers declarator compound_statement
[p]: external_declaration -> function_definition
[p]: translation_unit -> external_declaration
[S]: The top symbol table is popped off ========================================
