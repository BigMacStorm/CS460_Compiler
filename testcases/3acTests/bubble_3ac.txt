main:
BeginFunc;
Decl: numbers 5, 15, 8, 10, 12, 4, 9, 2, 7, 1;
Decl: size int 10;
Decl: swapped int 1;
Decl: index int 0;
Decl: temp int 0;
_LABEL1:
ifn swapped goto _LABEL2;
swapped := 0;
index := 9;
_LABEL3:
_TEMP1 := index >= 1;
ifn _TEMP1 goto _LABEL4;
_TEMP2 := index * 1;
_TEMP3 := _TEMP2 + 0;
_TEMP4 := 4;
_TEMP5 := _TEMP4 * _TEMP3;
_TEMP6 := _TEMP5 + numbers;
_TEMP7 := index - 1;
_TEMP8 := _TEMP7 * 1;
_TEMP9 := _TEMP8 + 0;
_TEMP10 := 4;
_TEMP11 := _TEMP10 * _TEMP9;
_TEMP12 := _TEMP11 + numbers;
_TEMP13 := *(_TEMP6) < *(_TEMP12);
if _TEMP13 goto _LABEL5;
goto _LABEL6;
_LABEL5:
_TEMP14 := index - 1;
_TEMP15 := _TEMP14 * 1;
_TEMP16 := _TEMP15 + 0;
_TEMP17 := 4;
_TEMP18 := _TEMP17 * _TEMP16;
_TEMP19 := _TEMP18 + numbers;
temp := *(_TEMP19);
_TEMP20 := index - 1;
_TEMP21 := _TEMP20 * 1;
_TEMP22 := _TEMP21 + 0;
_TEMP23 := 4;
_TEMP24 := _TEMP23 * _TEMP22;
_TEMP25 := _TEMP24 + numbers;
_TEMP26 := index * 1;
_TEMP27 := _TEMP26 + 0;
_TEMP28 := 4;
_TEMP29 := _TEMP28 * _TEMP27;
_TEMP30 := _TEMP29 + numbers;
*(_TEMP25) := *(_TEMP30);
_TEMP31 := index * 1;
_TEMP32 := _TEMP31 + 0;
_TEMP33 := 4;
_TEMP34 := _TEMP33 * _TEMP32;
_TEMP35 := _TEMP34 + numbers;
*(_TEMP35) := temp;
swapped := 1;
_LABEL6:
goto _LABEL3;
_LABEL4:
goto _LABEL1;
_LABEL2:
return 0;
EndFunc;
