main:
BeginFunc;
Decl: numbers 5, 15, 8, 10, 12, 4, 9, 2, 7, 1;
Decl: size int 10;
Decl: swapped int 1;
Decl: index int 0;
Decl: temp int 0;
_LABEL1:
if swapped goto _LABEL2;
goto _LABEL3;
_LABEL2:
swapped := 0;
index := 9;
_LABEL4:
_TEMP1 := index >= 1;
if _TEMP1 goto _LABEL5;
goto _LABEL6;
_LABEL7:
_TEMP2 := index;
index := index - 1;
goto _LABEL4;
_LABEL5:
_TEMP3 := index * 1;
_TEMP4 := _TEMP3 + 0;
_TEMP5 := 4;
_TEMP6 := _TEMP5 * _TEMP4;
_TEMP7 := _TEMP6 + numbers;
_TEMP8 := index - 1;
_TEMP9 := _TEMP8 * 1;
_TEMP10 := _TEMP9 + 0;
_TEMP11 := 4;
_TEMP12 := _TEMP11 * _TEMP10;
_TEMP13 := _TEMP12 + numbers;
_TEMP14 := *(_TEMP7) < *(_TEMP13);
if _TEMP14 goto _LABEL8;
goto _LABEL9;
_LABEL8:
_TEMP15 := index - 1;
_TEMP16 := _TEMP15 * 1;
_TEMP17 := _TEMP16 + 0;
_TEMP18 := 4;
_TEMP19 := _TEMP18 * _TEMP17;
_TEMP20 := _TEMP19 + numbers;
temp := *(_TEMP20);
_TEMP21 := index - 1;
_TEMP22 := _TEMP21 * 1;
_TEMP23 := _TEMP22 + 0;
_TEMP24 := 4;
_TEMP25 := _TEMP24 * _TEMP23;
_TEMP26 := _TEMP25 + numbers;
_TEMP27 := index * 1;
_TEMP28 := _TEMP27 + 0;
_TEMP29 := 4;
_TEMP30 := _TEMP29 * _TEMP28;
_TEMP31 := _TEMP30 + numbers;
*(_TEMP26) := *(_TEMP31);
_TEMP32 := index * 1;
_TEMP33 := _TEMP32 + 0;
_TEMP34 := 4;
_TEMP35 := _TEMP34 * _TEMP33;
_TEMP36 := _TEMP35 + numbers;
*(_TEMP36) := temp;
swapped := 1;
_LABEL9:
goto _LABEL7;
_LABEL6:
goto _LABEL1;
_LABEL3:
return 0;
EndFunc;
